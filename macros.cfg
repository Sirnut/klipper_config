# Let's see if putting macros in a separate file is helpful


################### PAUSE ################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 0.5
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 10.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float - 10.0 %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 12.0) %}
      {% set z_safe = 80 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

  ##################################################################


  ##################### RESUME ####################################

[gcode_macro RESUME]
rename_existing: RESUME_BASE
description: Resume the actual running print      
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  G90 ; Absolute check
  RESUME_BASE {get_params}


# ------------------------- Search Objects ---------------------------
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

# --------------------------------------------------------------------

# ------------------------- Low Temp Check ---------------------------
# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T_EXTRUDER = params.T_EXTRUDER|default(190) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T_EXTRUDER %}  # heat to T.
            M118 No setpoint, heating to {T_EXTRUDER}.
            M109 S{T_EXTRUDER}
        {% endif %}
    {% endif %}


# --------------------------------------------------------------------

# ------------------------- Gantry Dual-Z Alignment ------------------

# [gcode_macro ALIGN_Z]
# gcode:
#	{% if printer.homed_axes != 'XYZ' %}
#		G28			#Home All Axes
 #   G90 ; Set absolute
#    G1 Z248 F1500
 #   G1 Z250 F100
  #  G1 Z248 F100
   # G1 X125 Y125 Z20 F1500
    #G28 Z
#	{% endif %}

#---------------------------------------------------------------------

# ------------------------- Motors Off -------------------------------

[gcode_macro MOTORS_OFF] 
gcode:
  M84 X Y E ; disable motors

# --------------------------------------------------------------------

# ------------------------- Bed Mesh Calibrate -----------------------

#[gcode_macro CALIBRATE]
#gcode:
#  G28
#  M118 Start clibrating...
#  BED_MESH_CALIBRATE
#  G0 X0 Y0 Z10 F6000
#  BED_MESH_PROFILE save=default
#  SAVE_CONFIG

[gcode_macro CALIBRATE]
gcode:
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    G28
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    # G90
    # G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G28
    BED_MESH_CALIBRATE
    #G90
    #G1 Z10 F240
    G1 X150 Y155 F6000
    BED_MESH_PROFILE save=default
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

#--------------------------------------------------------------------
# --------------------------------------------------------------------
# --------------------------------------------------------------------
# --------------------------------------------------------------------
