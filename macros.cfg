# Let's see if putting macros in a separate file is helpful


# --------------------------- Start Print ----------------------------

[gcode_macro START_PRINT]
#variable_bed_temp: 75
#variable_extruder_temp: 235
gcode:
    # Home
    {% if printer.homed_axes != 'XYZ' %}
    ALIGN_Z
    {% endif %}
    {% set BED_TEMP = params.BED_TEMP|default(75)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(230)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Pre-heat extruder to 160
    M104 S{EXTRUDER_TEMP}
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0
    # Use absolute coordinates
    G90
    # Move Z up
    G1 Z10.0 F1500
    # Reset extruder
    G92 E0
    # Mesh Bed Leveling
    #G29 ; Create new mesh
    BED_MESH_PROFILE LOAD=PETG ; Loads default mesh, if previously created
    # Move away from start to reduce stringing
    G1 X10 Y200 Z10 F1000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Wait for Extruder temperature
    M109 S{EXTRUDER_TEMP}
    # Move Z axis up a little to prevent scratching heat bed
    #G1 Z2.0 F3000
    # Move to start position
    G1 X0.1 Y0.1 Z5.0 F5000.0
    # Move to start for purge line
    G1 X0.1 Y20 Z0.3 F5000.0
    # Draw 1st line
    G1 X0.1 Y150.0 Z0.3 F1500.0 E15
    # Move to side a little
    G1 X0.4 Y150.0 Z0.3 F5000.0
    # Draw 2nd line
    G1 X0.4 Y20 Z0.3 F1500.0 E30
    # Reset extruder
    G92 E0
    # Move Z up a little
    G1 Z5.0 F3000

    # Prime line
    #M117 PRIME LINE
    #PRIME_LINE
    
    # Print message on LCD
    M117 Start printing...
# --------------------------------------------------------------------


# ---------------------------- End Print -----------------------------

[gcode_macro END_PRINT]
variable_machine_depth: 220
gcode:
    G91 ; Set to relative
    M117 ta daaaaaa!
    M106 S250 ; Max FAN
    G1 E-2 F3000 ; Retract some
    G1 E-4 Z0.2 F2400 ;Retract and raise Z
    G1 X10 Y10 F3000 ; Wipe out
    #G1 Z175 F1000 ; Raise Z alot
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    G90 ; Set to absolute
    G1 X{machine_depth} Y{machine_depth} Z{machine_depth} F800 ;Present print
    # Disable steppers
    M84 X Y E
    G4 P10000 ; Wait four seconds
    M106 S0 ; Enough fan
    G92 E0 ; Zero extruder
    M117 Bone Apple Tea
    BED_MESH_CLEAR ; From this print
    # Turn off gcode offset
    #SET_GCODE_OFFSET Z=0

# --------------------------------------------------------------------

# ---------------------------- Cancel Print --------------------------

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:

  # Max fan to minimize stringing
  M106 S250
  M117 Oopsies
  #TURN_OFF_HEATERS
  M104 S0
  M140 S0
  M106 S0
  # Set all axes to relative
  G91
  # Retract a bit
  G1 E-6 Z0.2 F2700
  # Wipeout
  G1 X10 Y10 F3000
  # Absolute
  G90
  CANCEL_PRINT_BASE
  G1 Z200 F1000 # Raise Z more
  G1 X200 Y200 F2000 # Absolute xy
  M106 S0 ; enough fan
  G92 ; Clear extruder
  # G1 X0 Y{machine_depth}
  M84 X Y E ; disable motors
  M117 Try again...

# --------------------------------------------------------------------



# ---------------------------- Prime Line ----------------------------

# prime the nozzle 
[gcode_macro PRIME_LINE]
description: Move to left and draw a line to prime extruder
gcode: 
    {% if printer.extruder.temperature < 190 %}
      {action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=prime_extruder_state
      # Reset Extruder    
      G92 E0
      # MAX fan for less stringing
      M106 S250
      # Relative
      G91
      # Raise a bit
      G1 Z5 F500
      # Announce
      M117 Commence PURGE
      # Absolute
      G90
      # Move to start
      G1 X0.1 Y20 F3000
      # Move nozzle close to bed
      G1 Z0.28 F240
      # Draw the first line
      G1 X0.3 Y200 Z0.28 F1200 E10
      # Reset extruder
      G92 E0
      # Move to side a little
      G1 X0.3 Y200 Z0.28 F5000
      # Draw the second line
      G1 X0.3 Y20 Z0.28 F1000.0 E30
      # Move Z Axis up little to prevent scratching of Heat Bed
      G1 Z2.0 F1500
      # Move over to prevent blob squish
      G1 X3.0 Y20 Z0.15 F6000
      # Reset extruder
      G92 E0
      # Small Retract
      #G1 E-0.2 F2000
      # Reset Extruder
      #G92 E0
      # Leave dangerously close
      G1 Z0.2 F300
      # Stop fan for printing
      M106 S0
      RESTORE_GCODE_STATE NAME=prime_extruder_state
      # Announce
      M117 On your marks, get set... GO!
      # Ensure absolute
      G90
     {% endif %}
 
#---------------------------------------------------------------------

# ---------------------------- Load Filament -------------------------

[gcode_macro LOAD_FILAMENT]
# M701
gcode:
  SAVE_GCODE_STATE NAME=loading_filament
  M117 Loading Filament
  M83
  G92 E0.0
  LOW_TEMP_CHECK
  G1 E320 F300  # length of bowden tube till cold-end (~420mm) 
  G1 E20 F100  # some extra to prime the nozzle --> slower 
  G92 E0.0
  RESTORE_GCODE_STATE NAME=loading_filament

# --------------------------------------------------------------------

# ---------------------------- Unload Filament -----------------------

[gcode_macro UNLOAD_FILAMENT]
# M702
gcode:
  SAVE_GCODE_STATE NAME=unloading_filament
  M125 # park
  M117 Unloading Filament 
  LOW_TEMP_CHECK
  G91 # set relative
  G1 E10 F100 
  G92 E0.0
  G1 E-20 F1000
  G1 E-300 F400 # the E is the length of the bowden tube (420mm) + 100 mm. 
  G92 E0.0
  RESTORE_GCODE_STATE NAME=unloading_filament

# --------------------------------------------------------------------

# --------------------Filament Change---------------------------------
# filament change 
[gcode_macro FILAMENT_CHANGE]
# M600
gcode:
  M117 Filament Change
  M118 Filament Change
  SAVE_GCODE_STATE NAME=filament_change
  PAUSE
  LOW_TEMP_CHECK
  G91 # relative
  G1 E-1 F300 # retract 1
  M125 # park
  M702 # unload
  M117 New filament
  M118 New filament
  COUNTDOWN TIME=25 MSG="Switch"
  M701
  COUNTDOWN TIME=10 MSG="Clean"
  RESUME
  M117 Resuming
  M118 Resuming
  RESTORE_GCODE_STATE NAME=filament_change
  M117 Printing..
  M118 Printing..

# --------------------------------------------------------------------


# ---------------------------- Pause ---------------------------------


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

# --------------------------------------------------------------------

# ---------------------------- Resume --------------------------------

[gcode_macro RESUME]
rename_existing: RESUME_BASE
description: Resume the actual running print
              
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

# --------------------------------------------------------------------

# ------------------------- Filament Change --------------------------
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
description: Change Filament
variable_parameter_x: 50
variable_parameter_y: 0
variable_parameter_z: 10
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{z}
    G90
    G1 X{x} Y{y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
# --------------------------------------------------------------------

# ------------------------- Search Objects ---------------------------
[gcode_macro SEARCH_VARS]
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}

# --------------------------------------------------------------------

# ------------------------- Low Temp Check ---------------------------
# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T_EXTRUDER = params.T_EXTRUDER|default(190) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T_EXTRUDER %}  # heat to T.
            M118 No setpoint, heating to {T_EXTRUDER}.
            M109 S{T_EXTRUDER}
        {% endif %}
    {% endif %}


# --------------------------------------------------------------------

# ------------------------- Gantry Dual-Z Alignment ------------------

# [gcode_macro ALIGN_Z]
# gcode:
#	{% if printer.homed_axes != 'XYZ' %}
#		G28			#Home All Axes
 #   G90 ; Set absolute
#    G1 Z248 F1500
 #   G1 Z250 F100
  #  G1 Z248 F100
   # G1 X125 Y125 Z20 F1500
    #G28 Z
#	{% endif %}

#---------------------------------------------------------------------


# ---------------------------- Countdown -----------------------------

#[gcode_macro COUNTDOWN]
#default_parameter_MSG: "Time: "      
#default_parameter_TIME: 10      
#gcode:        
  # countdown 
#  {% for s in range(TIME|int, 0, -1) %}
#  # dwell 1 second
#  G4 P1000
#  # echo
#  M117 {params.MSG} {s}s
#  M118 {params.MSG} {s}s     
#  {% endfor %}

# --------------------------------------------------------------------

# ------------------------- Motors Off -------------------------------

[gcode_macro MOTORS_OFF] 
gcode:
  M84 X Y E ; disable motors

# --------------------------------------------------------------------

# ------------------------- Bed Mesh Calibrate -----------------------

#[gcode_macro CALIBRATE]
#gcode:
#  G28
#  M118 Start clibrating...
#  BED_MESH_CALIBRATE
#  G0 X0 Y0 Z10 F6000
#  BED_MESH_PROFILE save=default
#  SAVE_CONFIG

[gcode_macro CALIBRATE]
gcode:
  G28
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    # G90
    # G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G28
    BED_MESH_CALIBRATE
    #G90
    #G1 Z10 F240
    G1 X150 Y155 F6000
    BED_MESH_PROFILE save=default
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

#--------------------------------------------------------------------
# --------------------------------------------------------------------
# --------------------------------------------------------------------
# --------------------------------------------------------------------
